# importing module: add_integer
=========================================================
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [[1, 2, 3],[4, 5, 6]]

# check correct outputs
=========================================================
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix_divided(matrix, -7)
    [[-0.14, -0.29, -0.43], [-0.57, -0.71, -0.86]]

    >>> matrix_divided(matrix, 98.7)
    [[0.01, 0.02, 0.03], [0.04, 0.05, 0.06]]

    >>> matrix_divided(matrix, float('nan'))
    [[nan, nan, nan], [nan, nan, nan]]

    >>> matrix_divided(matrix, float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

    >>> matrix_divided(matrix, 1000000.0000000)
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

    >>> matrix_divided(matrix, -0.1234567890)
    [[-8.1, -16.2, -24.3], [-32.4, -40.5, -48.6]]

    >>> matrix = [[1, float('nan'), 3], [4, 5.87, float('inf')]]
    >>> matrix_divided(matrix, 10)
    [[0.1, nan, 0.3], [0.4, 0.59, inf]]


# check for TypeError
=========================================================
   >>> matrix = [[1, 2, 3], [4, 5, 6]]
   >>> matrix_divided(matrix, [1, 2,3])
   Traceback (most recent call last):
   ...
   TypeError: div must be a number

   >>> matrix_divided(matrix, 'a')
   Traceback (most recent call last):
   ...
   TypeError: div must be a number

   >>> matrix_divided(matrix, matrix)
   Traceback (most recent call last):
   ...
   TypeError: div must be a number

   >>> matrix_divided(matrix)
   Traceback (most recent call last):
   ...
   TypeError: matrix_divided() missing 1 required positional argument: 'div'

   >>> matrix_divided(45)
   Traceback (most recent call last):
   ...
   TypeError: matrix_divided() missing 1 required positional argument: 'div'
   
   >>> matrix_divided(matrix, None)
   Traceback (most recent call last):
   ...
   TypeError: div must be a number

   >>> matrix = [[1, 'j', 3], [4, 5.87, 6]]
   >>> matrix_divided(matrix, 10)
   Traceback (most recent call last):
   ...
   TypeError: matrix must be a matrix (list of lists) of integers/floats
   
   >>> matrix = [[1, 2, 3],[4, 5]]
   >>> matrix_divided(matrix, 3)
   Traceback (most recent call last):
   ...
   TypeError: Each row of the matrix must have the same size

# check for ValueError
=========================================================
    

# check for OverflowError
========================================================

# check for ZeroDivisionError
========================================================
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

# check for IndexError
========================================================
    >>> matrix = []
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    ...
    IndexError: matrix must be a matrix (list of lists) of integers/floats

# check for NameError
========================================================
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, j)
    Traceback (most recent call last):
    ...
    NameError: name 'j' is not defined